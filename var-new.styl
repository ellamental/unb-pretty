/*
##########
Variables
##########

Default variables.

..NOTE:: A file named ``var.styl`` at the project root is imported at the end
         of this file.  This provides an opportunity for the user to override
         any of the default variables here.

         Due to the hacky nature of this implementation, currently the best
         practice is to copy/paste this whole file and make changes as
         necessary.

TODO(nick): Come up with a less hacky way to do variable overrides.

            An example of the problem is the user overriding
            ``$color-primary``.  Since ``color-primary`` is used in other
            variable assignments, it needs to be overridden before its use.
            So simply importing the ``var`` file at the end will cause the
            original/default ``color-primary`` to be used (ex. in all the font
            colors).

            We can't just import the ``var-overrides`` file over-and-over
            though, because some variables are defined as nested hashes.  For
            example, if we try to import ``var-overrides`` immediately after
            defining the ``color-*`` variables, and a user tries to override
            ``$color.font.light.text`` an error will be thrown, because that
            hash structure doesn't exist yet.  But if we don't import the
            overrides, the user will not be able to override the default
            ``color-primary`` in any default variables defined afterward.

*/

// Colors
// =======

$color-light-base ?= #fff
$color-dark-base ?= #000

$color-primary ?= 'Indigo'
$color-accent ?= 'Deep Orange'
$color-grey ?= 'Grey'
// $color-grey = 'Blue Grey'



color--primary-lightest = palette($color-primary, '50')
color--primary-light = palette($color-primary, '200')
color--primary = palette($color-primary, '500')
color--primary-dark = palette($color-primary, '700')
color--primary-darkest = palette($color-primary, '900')

color--accent-lightest = palette($color-accent, '50')
color--accent-light = palette($color-accent, '200')
color--accent = palette($color-accent, '500')
color--accent-dark = palette($color-accent, '700')
color--accent-darkest = palette($color-accent, '900')

color--grey-lightest = palette($color-grey, '50')
color--grey-light = palette($color-grey, '200')
color--grey = palette($color-grey, '500')
color--grey-dark = palette($color-grey, '700')
color--grey-darkest = palette($color-grey, '900')

color--font--light--base = palette('White', '500')
color--font--light--text = palette('White', 'Text')
color--font--light--secondary = palette('White', 'Secondary Text')
color--font--light--icon = palette('White', 'Icons')
color--font--light--disabled = palette('White', 'Disabled')
color--font--light--hint = palette('White', 'Hint Text')
color--font--light--divider = palette('White', 'Dividers')

color--font--dark--base = palette('Black', '500')
color--font--dark--text = palette('Black', 'Text')
color--font--dark--secondary = palette('Black', 'Secondary Text')
color--font--dark--icon = palette('Black', 'Icons')
color--font--dark--disabled = palette('Black', 'Disabled')
color--font--dark--hint = palette('Black', 'Hint Text')
color--font--dark--divider = palette('Black', 'Dividers')


$color {
    _:_,

    primary-lightest: color--primary-lightest,
    primary-light: color--primary-light,
    primary: color--primary,
    primary-dark: color--primary-dark,
    primary-darkest: color--primary-darkest,

    accent-lightest: color--accent-lightest,
    accent-light: color--accent-light,
    accent: color--accent,
    accent-dark: color--accent-dark,
    accent-darkest: color--accent-darkest,

    grey-lightest: color--grey-lightest,
    grey-light: color--grey-light,
    grey: color--grey,
    grey-dark: color--grey-dark,
    grey-darkest: color--grey-darkest,

    font: {
        light: {
            base: color--font--light--base,
            text: color--font--light--text,
            secondary: color--font--light--secondary,
            icon: color--font--light--icon,
            disabled: color--font--light--disabled,
            hint: color--font--light--hint,
            divider: color--font--light--divider,
        },

        dark: {
            base: color--font--dark--base,
            text: color--font--dark--text,
            secondary: color--font--dark--secondary,
            icon: color--font--dark--icon,
            disabled: color--font--dark--disabled,
            hint: color--font--dark--hint,
            divider: color--font--dark--divider,
        },
    },
};



// Fonts
// ======

// UNB Pretty specifies font sizes in the CSS standard ``rem`` unit.
// Google's Material Design uses ``sp`` (scalable pixels) which are
// platform dependent (Android).  The comments below show the conversion
// from ``sp`` to ``rem`` based on a 16px default font size.
//
font--size--xs ?= 0.750rem      // 12px
font--size--sm ?= 0.875rem      // 14px
font--size--md ?= 1.000rem      // 16px
font--size--lg ?= 1.250rem      // 20px
font--size--xl ?= 1.500rem      // 24px
font--size--xxl ?= 2.125rem     // 34px
font--size--xxxl ?= 2.813rem    // 45px
font--size--xxxxl ?= 3.500rem   // 56px
font--size--xxxxxl ?= 7.000rem  // 112px

font--weight--light = 300,
font--weight--regular = 400,
font--weight--medium = 500,

font--size = {
    xs: font--size--xs,
    sm: font--size--sm,
    md: font--size--md,
    lg: font--size--lg,
    xl: font--size--xl,
    xxl: font--size--xxl,
    xxxl: font--size--xxxl,
    xxxxl: font--size--xxxxl,
    xxxxxl: font--size--xxxxxl,
}

font--weight = {
    light: font--weight--light,
    regular: font--weight--regular,
    medium: font--weight--medium,
}


$font ?= {}
$font['primary'] ?= {
    family: 'Roboto'\, 'Noto'\, sans-serif,
    size: font--size,
    weight: font--weight,
}
$font['accent'] ?= {
    family: 'Roboto'\, 'Noto'\, sans-serif,
    size: font--size,
    weight: font--weight,
}

$font['style'] ?= {
    display4: {
        family: $font.primary.family,
        size: $font.size.xxxxxl,
        height: 8.000rem,
        weight: $font.primary.weight.light,
        spacing: -0.010rem,
    },

    display3: {
        family: $font.primary.family,
        size: $font.size.xxxxl,
        height: 4.000rem,
        weight: $font.primary.weight.regular,
        spacing: -0.005rem,
    },

    display2: {
        family: $font.primary.family,
        size: $font.size.xxxl,
        height: 4.000rem,
        weight: $font.primary.weight.regular,
    },

    display1: {
        family: $font.primary.family,
        size: $font.size.xxl,
        height: 3.250rem,
        weight: $font.primary.weight.regular,
    },

    headline: {
        family: $font.primary.family,
        size: $font.size.xl,
        height: 2.750rem,
        weight: $font.primary.weight.regular,
    },

    title: {
        family: $font.primary.family,
        size: $font.size.lg,
        height: 2.750rem,
        weight: $font.primary.weight.medium,
        spacing: 0.005em,
    },

    subheading: {
        family: $font.primary.family,
        size: $font.size.md,
        height: 2.000rem,
        weight: $font.primary.weight.regular,
        spacing: 0.010rem,
    },

    body2: {
        family: $font.primary.family,
        size: $font.size.sm,
        height: 1.563rem,
        weight: $font.primary.weight.medium,
        spacing: 0.010rem,
    },

    body: {
        family: $font.primary.family,
        size: $font.size.sm,
        height: 1.563rem,
        weight: $font.primary.weight.regular,
        spacing: 0.010rem,
    },

    caption: {
        family: $font.primary.family,
        size: $font.size.xs,
        height: 2.000rem,
        weight: $font.primary.weight.regular,
        spacing: 0.020rem,
    },

    button: {
        family: $font.primary.family,
        size: $font.size.sm,
        height: 2.000rem,
        weight: $font.primary.weight.medium,
        transform: uppercase,
        spacing: 0.010rem,
    },
}



// Import User Overrides
// ======================

@require "var-overrides"
